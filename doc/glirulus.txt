glirulus() - Yet Another Matrix Applications' New Engine

ファンクション glirulus()は行列の性質を判断して、 連立一次方程式の求解に
最善を尽くす。解法の自動選択の流れ図に従い、

 1.[TDMA]          ... TDMA法、
 2.[CG(vcl)]       ... 前処理つきCG法、あるいはCG法(ViennaCL版).
 3.[Bi-CGSTAB(vcl)]... 前処理つきBi-CGSTAB法、あるいはBi-CGSTAB法(ViennaCL版)、
 4.[GMRES(vcl)]    ... 前処理つきGMRES法、あるい、GMRES法(ViennaCL版)、
 5.[Bi-CGSTAB]     ... 前処理つきBi-CGSTAB法あるいは、Bi-CGSTAB法(cl_bicgstab())、
 6.[LU]            ... LU分解(Eigen Elu())、
 7.[PerfectPivot]  ... 完全軸選択によるガウスの消去法(未実装)、

のうちの何れかを用いる。このことにより、 
MatrixMarketの実正方行列の殆どを解くことが出来る。
7.は未実装の為、流れ図に含まれていません。
2.3.5.はTDMA法を内包していて、3重対角行列か否かを判定している。

glirulus()による解法の自動選択の流れ図(画面を大きくして下さい)

[Start:]
   |
   V
[-solver vcl_cg]Yes->[対称行列か?]Yes->[対角成分に0は無い?]Yes->[PreCG(vcl) 残差は小さいか?]Yes->[完了]
 No|                  No|               No|                      No|
   |                    |                 |                        V
   |                    |                 |                     [Default: へ]
   |                    V                 V            
   |                 [Default:へ]      [CG(vcl)残差は小さいか?]Yes->[完了]
   |                                    No| 
   |                                      V
   |                                   [Default: へ]
   V
[-solver vcl_bicgstab]Yes->[対角成分に0は無い?]Yes->[PreBi-CGSTAB(vcl) 残差は小さいか?]Yes->[完了]
 No|                        No|                      No|
   |                          |                        V
   |                          |                     [Default:へ]
   |   	       		      V
   |                       [Bi-CGSTAB(vcl) 残差は小さいか?]Yes->[完了]
   |                        No|
   |		              V
   |  		           [Default:へ]
   V
[-solver vcl_gmres]Yes->[対角成分に0は無い?]Yes->[PreGMRES 残差は小さいか?]Yes->[完了]
 No|                    No|                      No|
   |                      |                        V
   |                      |                     [Default:へ]
   |   			  V
   |                    [GMRES 残差は小さいか?]Yes->[完了]
   |                     No|
   |		 	   V
   |  		        [Default:へ]
   V
[-solver cl_bicgstab]Yes->[対角成分に0は無い?]Yes->[PreBi-CGSTAB 残差は小さいか?]Yes->[完了]
 No|                       No|                      No|
   |                         |                        V
   |                         |                     [Default:へ]
   |   			     V
   |                      [BiCGSTAB 残差は小さいか?]Yes->[完了]
   |                       No|
   |			     V
   |  		          [Default:へ]
   V
[-solver Elu]Yes->[マトリクスのサイズ<16000か?]Yes->[LU 残差は小さいか?]Yes->[完了]
   |		   No|                               No|
   |		     V                                 V
   |		  [Default:へ]                      [Default:へ]
   V
[Default: 対称行列で vcl_cg指定無しか?]Yes->[PreCG(vcl)あるいはCG(vcl) 残差は小さいか?]Yes->[完了]
 No|                                         No|
   |                                           V
   |                                        [Recover: へ]
   V
[vcl_bicgstab指定無しか?]Yes->[PreBi-CGSTAB(vcl)あるいはBi-CGSTAB(vcl) 残差は小さいか?]Yes->[完了]   
 No|                           No|
   |           	                 V
   |			      [Recove:rへ]
   V
[Recover: 対角成分に0は無い?]Yes->[PreBi-CGSTAB 残差は小さいか?]Yes->[完了]
 No|                               No|
   |                                 V
   |                              [Recover: へ]
   V
[Bi-CGSTAB 残差は小さいか?]Yes->[完了]   
 No|
   V
[Recover:を3回繰り替えしたか?]No->[Recover: へ]
Yes|
   V
[マトリクスのサイズ<16000か?]Yes->[LU 残差は小さいか?]Yes->[完了]
 No|                               No|
   |	                             V
   |				  [Final: へ]
   V
[Final: PreGMRESあるいはGMRES]


/* sample.c++ -- glirulus()のサンプルソース */
#include <cstdio>
#include <vector>
#include "est/sparse.hpp"
#include "est/glirulus.hpp"

int main(int argc, char **argv)
{
  glirulus_init(argc,argv);

  sparse::matrix<double> A(3);
  vector<double> x, b(3);

  A[1][1] = 2.0; A[1][2] = 1.0; b[1] = 3.0;
                 A[2][2] = 1.0; b[2] = 1.0;

  x = glirulus(A,b);
  printf("x[1]=%f\n",x[1]);
  printf("x[2]=%f\n",x[2]);
  return 0;
}


--

コマンド glirulus - MatrixMarket形式の連立一次方程式の求解

$ glirulus -A (filename.mtx) [-b (filename_rhs1.mtx)] [-o (filename_x1.mtx)]

コマンド glirulusは glirulus()エンジンを用いたコマンドインターフェースです。
オプション-AでMatrixmarket形式の実正方行列 filename.mtx(=Aとする)と、
オプション-bでMatrixmarket形式の一次元ベクトル filename_rhs1.mtx(=bとする)
を引数に与えると、
連立方程式 Ax=b の解xを
オプション-oで指定したファイル filename_x1.mtxに保存する。


glirulus()のベンチマーク結果(vcl_cg()を自動選択)
Problem NO : 0 real 0m0.829s
Problem NO : 1 real 0m13.340s
Problem NO : 2 real 0m11.231s
Problem NO : 3 real 0m44.721s
Problem NO : 4 real 0m14.444s
Problem NO : 5 real 0m0.169s
(2017-10-27計測)
GPU:    NVIDIA Geforce GTS450
CPU:    PhenomIIx6 3.2GHz
Memory: 8G bytes
OS:     Linux version 4.13.6-1-ARCH
