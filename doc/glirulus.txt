glirulus() - Yet Another Matrix Applications' New Engine

ファンクション glirulus()は行列の性質を判断して、 連立一次方程式の求解に
最善を尽くす。解法の自動選択の流れ図に従い、

 1.[TDMA]                ... TDMA法、
 2.[JacobiCG(vcl)]       ... 点ヤコビ前処理つきCG法(ViennaCL版),
 3.[JacobiBi-CGSTAB(vcl)]... 点ヤコビ前処理つきBi-CGSTAB法(ViennaCL版)、
 4.[Bi-CGSTAB(Vcl)]      ... Bi-CGSTAB法(ViennaCL版)、
 5.[JacobiBi-CGSTAB]     ... 点ヤコビ前処理つきBi-CGSTAB法(cl_bicgstab())、
 6.[Bi-CGSTAB]           ... Bi-CGSTAB法(cl_bicgstab())、
 7.[LU]                  ... LU分解(Eigen Elu())、
 8.[PerfectPivot]        ... 完全軸選択によるガウスの消去法(未実装)、
 9.[JacobiGMRES(vcl)]    ... 点ヤコビ前処理つきGMRES(n)法(VienaCL版)(未実装)、 
10.[GMRES(vcl)]          ... GMRES(n)法(ViennaCL版)(未実装)、

のうちの何れかを用いる。このことにより、 
MatrixMarketの実正方行列の殆どを解くことが出来る。

glirulus()による解法の自動選択の流れ図(画面を大きくして下さい)
8.9.10.は未実装の為、流れ図に含まれていません。

[-solver vcl_cg]Yes->[三重対角行列か?]Yes->[TDMA]
 No|                  No|
   |                    V
   |                 [対称行列か?]Yes->[JacobiCG(vcl) 残差は小さいか?]Yes->[完了]
   |                                    No|
   |                                      V
   |                                   [Defaultへ]
   V
[-solver bicgstab]Yes->[三重対角行列か?]Yes->[TDMA]
 No|                    No|
   |                      V
   |		       [対角成分に0は無い?]Yes->[JacobiBi-CGSTAB 残差は小さいか?]Yes->[完了]
   |                    No|
   |   			  V
   |                   [BiCGSTAB 残差は小さいか?]Yes->[完了]
   |                    No|
   |			  V
   |  		       [Defaultへ]
   V
[-solver Elu]Yes->[三重対角行列か?]Yes->[TDMA]
 No|               No|
   |		     V
   |		  [マトリクスのサイズ<16000か?]Yes->[LU 残差は小さいか?]Yes->[完了]
   |		   No|                               No|
   |		     V                                 V
   |		  [Defaultへ]                       [Defaultﾍ]
   V
[Default 三重対角行列か?]Yes->[TDMA]
 No|
   V
[対角成分に0は無いか?]Yes->[JacobiBi-CGSTAB(vcl) 残差は小さいか?]Yes->[完了]   
 No|                        No|
   |			      V
   |			   [Recoverへ]
   V
[Bi-CGSTAB(vcl) 残差は小さいか?]Yes->[完了]
 No|
   V
[Recover 三重対角行列か?]Yes->[TDMA]
 No|
   V
[対角成分に0は無いか?]Yes->[JacobiBi-CGSTAB 残差は小さいか?]Yes->[完了]
 No|                        No|
   |                          V
   |                       [Finalへ]
   V
[Bi-CGSTAB 残差は小さいか?]Yes->[完了]   
 No|
   V
[Recover を3回繰り返す]
   |
   V
[Final 三重対角行列か?]Yes->[TDMA]
 No|
   V
[マトリクスのサイズ<16000か?]Yes->[LU 残差は小さいか?]Yes->[完了]
 No|                               No|
   |	                             V
   |				  [残差の大きいまま計算終了]
   V
[ここに飛んできた時点のJacobiBi-CGSTABあるいはBi-CGSTABの計算結果を返す]


/* sample.c++ -- glirulus()のサンプルソース */
#include <cstdio>
#include <vector>
#include "est/sparse.hpp"
#include "est/glirulus.hpp"

int main(int argc, char **argv)
{
  glirulus_init(argc,argv);

  sparse::matrix<double> A(3);
  vector<double> x, b(3);

  A[1][1] = 2.0; A[1][2] = 1.0; b[1] = 3.0;
                 A[2][2] = 1.0; b[2] = 1.0;

  x = glirulus(A,b);
  printf("x[1]=%f\n",x[1]);
  printf("x[2]=%f\n",x[2]);
  return 0;
}


--

コマンド glirulus - MatrixMarket形式の連立一次方程式求解

$ glirulus -A (filename.mtx) [-b (filename_rhs1.mtx)] [-o (filename_x1.mtx)]

コマンド glirulusは glirulus()エンジンを用いたコマンドインターフェースです。
オプション-AでMatrixmarket形式の実正方行列 filename.mtx(=Aとする)と、
オプション-bでMatrixmarket形式の一次元ベクトル filename_rhs1.mtx(=bとする)
を引数に与えると、
連立方程式 Ax=b の解xを
オプション-oで指定したファイル filename_x1.mtxに保存する。


glirulus()のベンチマーク結果(vcl_cg()自動選択)
Problem NO : 0 real 0m0.829s
Problem NO : 1 real 0m13.340s
Problem NO : 2 real 0m11.231s
Problem NO : 3 real 0m44.721s
Problem NO : 4 real 0m14.444s
Problem NO : 5 real 0m0.169s
(2017-10-27計測)
GPU:    NVIDIA Geforce GTS450
CPU:    PhenomIIx6 3.2GHz
Memory: 8G bytes
OS:     Linux version 4.13.6-1-ARCH
